@model MediviseMVC.Models.Patient
@{
    ViewBag.Title = "Details";
}

@section MyOtherJavascript {
    <!-- jQRangeSlider -->
    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Plugins/jQRangeSlider/css/dev.css")"/>  
    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Plugins/jQRangeSlider/demo/style.css")"/>  
    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Plugins/jQRangeSlider/demo/lib/jquery-ui/css/smoothness/jquery-ui-1.8.10.custom.css")"/>
    <script type="text/javascript" src="@Url.Content("~/Plugins/jQRangeSlider/lib/jquery-1.7.1.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Plugins/jQRangeSlider/demo/lib/jquery-ui/js/jquery-ui-1.8.16.custom.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Plugins/jQRangeSlider/lib/jquery.mousewheel.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Plugins/jQRangeSlider/jQAllRangeSliders-min.js")"></script>

    <!-- progressbar -->
    <script type="text/javascript" src="@Url.Content("~/Plugins/jquery.progressbar/js/jquery.progressbar.js")"></script>

    <script type="text/javascript">
    @{
        for (int i = 0; i < Model.Tests.Count; i++){
            <text>
                $(function () {
                    var moveLeft = 20;
                    var moveDown = 10;
                    var hoverDiv = $("#myHandle@(i)");
                    hoverDiv.hover(function (e) {
                        $('#test-pop@(i)').show();
                    }, function () {
                        $('#test-pop@(i)').hide();
                    });
                    hoverDiv.mousemove(function (e) {
                        $('#test-pop@(i)').css('top', e.pageY + moveDown).css('left', e.pageX + moveLeft);
                    });
                });
            </text>
        }
    }
    </script>
}

<h2 class="test">Details</h2>

<fieldset>
    <legend>Patient</legend>
    <div class="common-box">
        <div class="common-label">FirstName:</div>
        <div class="common-field">
            @Html.DisplayFor(model => model.FirstName)
        </div>
    </div>

    <div class="common-box">
        <div class="common-label">LastName:</div>
        <div class="common-field">
            @Html.DisplayFor(model => model.LastName)
        </div>
    </div>

    <div class="common-box">
        <div class="common-label">Phone:</div>
        <div class="common-field">
            @Html.DisplayFor(model => model.Phone)
        </div>
    </div>

    <div class="common-box">
        <div class="common-label">FamilyPhone1:</div>
        <div class="common-field">
            @Html.DisplayFor(model => model.FamilyPhone1)
        </div>
    </div>

    <div class="common-box">
        <div class="common-label">FamilyPhone2:</div>
        <div class="common-field">
            @Html.DisplayFor(model => model.FamilyPhone2)
        </div>
    </div>

    <div class="common-box">
        <div class="common-label">Address:</div>
        <div class="common-field">
            @Html.DisplayFor(model => model.Address)
        </div>
    </div>

    <div class="common-box">
        <div class="common-label">Time Zone:</div>
        <div class="common-field">
            @Html.DisplayFor(model => model.TimeZone)
        </div>
    </div>

    <div class="common-box">
        <div class="common-label">Gender:</div>
        <div class="common-field">
            @Html.DisplayFor(model => model.Gender)
        </div>
    </div>

    
</fieldset>

<!--=======================================-->
@{
    DateTime min = new DateTime(0);
    DateTime max = new DateTime(0);

    if (Model.Drugs.Count() != 0){
        min = Model.Drugs.First().StartDate;
        max = Model.Drugs.First().EndDate;
        foreach (var drug in Model.Drugs){
            if (drug.StartDate < min) { min = drug.StartDate; }
            if (drug.EndDate > max) { max = drug.EndDate; }
        }
    }
}
<!--=======================================-->
<div class="drug-timeline">
    @{
        //figuring out progress on progressbar
        DateTime today = DateTime.Today;
        int progressDays = 0;
        int totalDays = 1;
        if (max <= today){
            progressDays = 1;
        }
        else if (min >= today){
            progressDays = 0;
        }
        else{
            totalDays = (max - min).Days;
            progressDays = (today - (min.AddDays(0))).Days;
        }

                    //show the progress bar
        <text>
            <div id="progressbar"></div>
            <script type="text/javascript">
                $("#progressbar").progressBar( @(progressDays + 1), {
                    steps: @(totalDays),
                    max: @(totalDays),
                    width: $("#progressbar").width(),
                    height: 59 * @(Model.Drugs.Count) + 50,
                    showText: false,
                    barImage: '../../../Plugins/jquery.progressbar/images/progressbar_custom.gif',
                    boxImage: '../../../Plugins/jquery.progressbar/images/progressborder_blank.gif'
                });

            </script>
        </text>
        
        int countHelper = 0;
        @:<div class="sliders-group">
        foreach (var drug in Model.Drugs){
            <text>
                <div class="slider-box">
                    <div class="slider-text">
                        @(drug.DrugInfo.Name) - @(drug.TimesPerWeek) times/week | @Html.DisplayFor(modelItem => drug.StartDate) to @Html.DisplayFor(modelItem => drug.EndDate)
                    </div>
                    <div id="slider@(countHelper)"></div>
                    <script type="text/javascript">
                        var slider = $('#slider@(countHelper)');
                        //note: month 0 = janurary
                        slider.dateRangeSlider({
                            arrows: false,
                            bounds: {   min: new Date(@(min.Year), @(min.Month - 1), @(min.Day)), 
                                        max: new Date(@(max.Year), @(max.Month - 1), @(max.Day)) },
                            defaultValues: {    min: new Date(@(drug.StartDate.Year), @(drug.StartDate.Month - 1), @(drug.StartDate.Day)), 
                                                max: new Date(@(drug.EndDate.Year), @(drug.EndDate.Month - 1), @(drug.EndDate.Day)) },
                            valueLabels: "change"
                        });
                    </script>
                </div>
            </text>
            countHelper++;
        }

        //calculating positions for testDates
        <text>
            <div class="mySliderContainer">
                Checkup Dates
                <div class="mySlider" id="mySliderId">            
                @{
                    int counterHelper2 = 0;
                    foreach (var test in Model.Tests)
                    {
                        <text>
                            <div class="myHandle" id="myHandle@(counterHelper2)"></div>
                            <script type="text/javascript">
                                var progressDate = @((Model.Tests.ElementAt(counterHelper2).TestDate - min).Days);
                                var position = ($('#mySliderId').width() / @(totalDays)) * progressDate;    //(barwidth / totaldays) * progressdays
                                $('#myHandle@(counterHelper2)').css("left", position + 10);
                            </script>
                        </text>
                        counterHelper2++;
                    }
                }
                </div>
            </div>
        </text>
        @:</div>
    }
</div>

<!--=======================================-->

<!-- popup div -->

@{
    for (int i = 0; i < Model.Tests.Count; i++){
        var test = Model.Tests.ElementAt(i);
        <text>
            <div class="test-pop" id="test-pop@(i)">
                <h3>@(test.TestInfo.Name)</h3>
                <p>
                    @(test.TestDate)
                </p>
            </div>
        </text>
    }
}

<table title = "Drug Messages">
  <tr>
     <th>Drug Name</th>
     <th>Dosage</th>
     <th>Start Date</th>
     <th>End Date</th>
  </tr>
  @foreach (var drug in Model.Drugs)
  {
    <tr>
      <td>@drug.DrugInfo.Name</td>
      <td>@drug.TimesPerWeek Times Per Week</td>
      <td>@Html.DisplayFor(modelItem => drug.StartDate) </td>
      <td>@Html.DisplayFor(modelItem => drug.EndDate) </td>
    </tr>
  }
</table>

<table title = "Test Messages">
  <tr>
    <th>Description</th>
    <th>Test Date</th>
  </tr>
  @foreach (var test in Model.Tests)
  {
      <tr>
        <td>@test.TestInfo.Name</td>
        <td>@Html.DisplayFor(modelItem => test.TestDate) </td>
      </tr>
  }
</table>

<table title = "Custom Messages">
 <tr>
   <th>Message</th>
   <th>Start Date</th>
   <th>End Date</th>
 </tr>
 @foreach (var msg in Model.Messages)
 {
     <tr>
       <td>@msg.MessageText</td>
       <td>@Html.DisplayFor(modelItem => msg.StartDate) </td>
       <td>@Html.DisplayFor(modelItem => msg.EndDate) </td>
     </tr>
 }
</table>
<!-- access alerts through ViewData["alerts"] -->
@using MediviseMVC.Models
<table>
 <tr>
   <th>Alert Type</th>
   <th>Alert Date</th>
 </tr>
 @foreach (var alert in (List<Alert>)ViewData["alerts"])
 {
   <tr>
     <td>@alert.AlertType.Name</td>
     <td>@alert.AlertDate</td>
   </tr>
 }
</table>
<p>
     @Html.ActionLink("Back to List", "Index") | @Html.ActionLink("Edit", "Edit", new { id = Model.PatientId }) |
     @Html.ActionLink("TimeLine", "Edit", "TreatmentPlanner", new { id = Model.PatientId }, null)
</p>
