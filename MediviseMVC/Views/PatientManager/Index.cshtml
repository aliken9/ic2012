@model IEnumerable<MediviseMVC.Models.Patient>
           
@{
    ViewBag.Title = "Patient Manager";
}
@section MyOtherJavascript {
    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Plugins/jQueryValidation/css/validationEngine.jquery.css")" />
    <link type="text/css" rel="stylesheet" href="@Url.Content("~/Plugins/jtable/themes/standard/blue/jtable_blue.css")" />
    <script type="text/javascript" src="@Url.Content("~/Plugins/jtable/jquery.jtable.min.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Plugins/jQueryValidation/js/jquery.validationEngine.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/Plugins/jQueryValidation/js/languages/jquery.validationEngine-en.js")"></script>
}

<div id="PatientList"></div>
<script type="text/javascript">
    var bindPhonesChildTable = function (elem,phones) {
        elem.click(function () {
            $('#PatientList').jtable('openChildTable',elem.closest('tr'),
              {
                title: 'Phones',
                actions: {},
                fields: {
                  Phone: {
                     title: 'Phone',
                     display: function (data) {
                        return phones.Phone;
                     }
                  },
                  FamilyPhone1: {
                     title: 'Family Phone 1',
                     display: function (data) {
                        return phones.FamilyPhoneOne;
                     }
                  },
                  FamilyPhone2: {
                     title: 'Family Phone 2',
                     display: function (data) {
                        return phones.FamilyPhoneTwo;
                     }
                  }
                }
              }, function (data) {
                    data.childTable.jtable('addRecord', 
                    { record: {Phone:phones.Phone,FamilyPhone1:phones.FamilyPhoneOne,FamilyPhone2:phones.FamilyPhoneTwo},
                      clientOnly:true,
                    });
              });
        });
    };
    var bindAlertsChildTable = function (elem,persondata) {
        elem.click(function () {
            $('#PatientList').jtable('openChildTable', elem.closest('tr'),
               {
                   title: 'Alerts',
                   actions: {
				      listAction: '/Alert/ListAlertsFor?PatientId=' + persondata.record.PatientId,
                      deleteAction: '/Alert/DeleteAlert'
                   },
                   fields: {
				      AlertId: {
					     key: true,
						 create: false,
						 edit: false,
						 list: false
					  },
					  AlertDate:{
					     title: 'Date',
						 type: 'date'
					  },
					  AlertType: {
					     title: 'Type'
					  }
                   },				   
               }, function (data) {
                   data.childTable.jtable('load');
               });
        });
    };
    $(document).ready(function () {
        $("#PatientList").jtable({
            title: 'Patients',
            selecting: true,
            selectingCheckboxes: true,
            paging: true,
            pageSize: 20,
            actions: {
                listAction: '/PatientManager/PatientList',
                updateAction: '/PatientManager/UpdatePatient',
                deleteAction: '/PatientManager/DeletePatient',
                createAction: '/PatientManager/CreatePatient'
            },
            fields: {
                PatientId: {
                    key: true,
                    create: false,
                    edit: false,
                    list: false
                },
                /*
                Alerts: {
                    title: 'Alerts',
                    create: false,
                    edit: false,
                    display: function (data) {
                        var $alerts = $('<button id="AlertsChildTable">Alerts</button>');
                        bindAlertsChildTable($alerts,data);
                        return $alerts;
                    }
                },
                */    
                FirstName: {
                    title: 'First Name',
                    display: function (data) {
                        return '<a href="/PatientManager/Details/' + data.record.PatientId + '">' + data.record.FirstName + '</a>';
                    },
                    inputClass: 'validate[required]'
                },
                LastName: {
                    title: 'Last Name',
                    inputClass: 'validate[required]'
                },
                Gender: {
                    title: 'Gender',
                    options: { Male: 'Male', Female: 'Female', Unspecified: 'Unspecified' },
                    inputClass: 'validate[required]'
                },
                Phone: {
                    title: 'Phone',
                    display: function(data) {
                       var $phones = $('<div id="PhoneChildTable">'+data.record.Phone+'</div>');
                       var phones = {};
                       phones.Phone = data.record.Phone;
                       phones.FamilyPhoneOne = data.record.FamilyPhone1;
                       phones.FamilyPhoneTwo = data.record.FamilyPhone2;
                       bindPhonesChildTable($phones,phones);
                       return $phones; 
                    },
                    inputClass: 'validate[required,custom[phone],maxSize[10]]'
                },
                FamilyPhone1: {
                    title: 'Family Phone 1',
                    list: false,
                    inputClass: 'validate[required,custom[phone],maxSize[10]]'
                },
                FamilyPhone2: {
                    title: 'Family Phone 2',
                    list:false,
                    inputClass: 'validate[custom[phone],maxSize[10]]'
                },
                Address: {
                    title: 'Address',
                    inputClass: 'validate[required]'
                },
                TreatmentStartDate: {
                    title: 'Treatment Starts',
                    type: 'date',
                    inputClass: 'validate[required,custom[date]]'
                },
                TreatmentEndDate: {
                    title: 'Treatment Ends',
                    type: 'date',
                    inputClass: 'validate[required,custom[date]]'
                },
                TimeZone: {
                    title: 'Time Zone',
                    list: false,
                    options: '/PatientManager/TimeZoneList'
                }
            },
            formCreated: function (event, data) {
                data.form.validationEngine({ autoHidePrompt: true, autoHideDelay: 2000, autoPositionUpdate: true });
            },
            formSubmitting: function (event, data) {
                return data.form.validationEngine('validate');
            },
            formClosed: function (event, data) {
                data.form.validationEngine('hide');
                data.form.validationEngine('detach');
            }
        });
        $("#PatientList").jtable('load');
    });
</script>
